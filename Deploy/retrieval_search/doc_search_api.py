import os
import requests
import logging
from bs4 import BeautifulSoup
from googleapiclient.discovery import build
from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()

API_KEY = os.getenv("GOOGLE_API_KEY")
CSE_ID = os.getenv("GOOGLE_CSE_ID")

# C·∫•u h√¨nh logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# H√†m l·∫•y n·ªôi dung trang web
def get_page_content(url):
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, 'html.parser')
        paragraphs = soup.find_all('p')
        content = "\n".join([p.get_text() for p in paragraphs])
        return content.strip()
    except requests.exceptions.RequestException as e:
        logger.warning(f"[L·ªñI] Kh√¥ng l·∫•y ƒë∆∞·ª£c n·ªôi dung t·ª´ {url}: {e}")
        return ""

# H√†m ch√≠nh: th·ª±c hi·ªán t√¨m ki·∫øm v√† tr√≠ch xu·∫•t n·ªôi dung
def tool_search(query, api_key=API_KEY, cse_id=CSE_ID, num_results=1):
    if not api_key or not cse_id:
        logger.error("API_KEY ho·∫∑c CSE_ID kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y trong bi·∫øn m√¥i tr∆∞·ªùng.")
        return []

    try:
        service = build("customsearch", "v1", developerKey=api_key)
        res = service.cse().list(q=query, cx=cse_id, num=num_results).execute()

        results = []
        if 'items' in res:
            for item in res['items']:
                link = item.get('link')
                content = get_page_content(link)
                results.append({
                    'title': item.get('title'),
                    'link': link,
                    'snippet': item.get('snippet'),
                    'content': content
                })
        else:
            logger.info("Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ ph√π h·ª£p.")
        return results
    except Exception as e:
        logger.error(f"L·ªói trong tool_search: {e}")
        return []

# # V√≠ d·ª• g·ªçi h√†m
# if __name__ == "__main__":
#     query = "DFT technology JSC l√† c√¥ng ty g√¨"
#     search_results = tool_search(query)

#     for i, item in enumerate(search_results):
#         print(f"{i+1}. üè∑Ô∏è {item['title']}")
#         print(f"   üîó {item['link']}")
#         print(f"   ‚úçÔ∏è  {item['snippet']}")
#         print(f"   üìÑ N·ªôi dung:\n{item['content'][:800]}")  # In t·ªëi ƒëa 800 k√Ω t·ª±
#         print("-" * 80)
